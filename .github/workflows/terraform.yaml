name: 'Terraform-air-quality-monitoring'

on:
  push:
    branches:
      - dev
    paths: 
      - '02-IaC/modules/**'
      - '02-IaC/environments/dev/main.tf'
      - '.github/workflows/terraform.yaml'

env:
  PROJECT_ID: terraform-test-420413
  BUCKET_TF_STATE: air-quality-monitoring-terraform-state
  WORKLOAD_IDENTITY_PROVIDER: projects/68976813959/locations/global/workloadIdentityPools/iam-pool-github/providers/iam-pool-provider-github

permissions:
  contents: read
  id-token: 'write'

jobs:
  terraform:
    name: terraform
    runs-on: ubuntu-latest
    environment:
      name: dev

    defaults:
      run:
        shell: bash
        working-directory: ./02-IaC/environments/dev

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: gcp authentication
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }} 

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=${{ env.BUCKET_TF_STATE }}"
  

      # Additional checks
      # - name: Terraform check format
      #   id: check-fmt
      #   run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
      
      - name: Publish Terraform plan
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
  
            <details><summary>Show Plan</summary>
  
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
  
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
  
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
  
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
  
      - name: Terraform Apply
        if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false

      